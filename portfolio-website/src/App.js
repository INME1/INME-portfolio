import React, { useState, useEffect, useCallback, useMemo } from 'react';
import { motion } from 'framer-motion';
import { ChevronLeft, ChevronRight, Github, Mail, ExternalLink, ArrowDown } from 'lucide-react';
// Ïù¥ÎØ∏ÏßÄ import Ï∂îÍ∞Ä
import coverImage from './images/projects/cover.png';
import profileImage from './images/ÍπÄÏÉÅÎ¨µÏÇ¨ÏßÑ.jpg';

const Portfolio = () => {
  const [currentProjectIndex, setCurrentProjectIndex] = useState(0);
  const [currentSection, setCurrentSection] = useState(0);
  const [isScrolling, setIsScrolling] = useState(false);
  const [lastScrollTime, setLastScrollTime] = useState(0);
  


  // Î©îÎ™®Ïù¥Ï†úÏù¥ÏÖòÎêú Îç∞Ïù¥ÌÑ∞
  const projects = useMemo(() => [
    {
      id: 1,
      title: "CDSS ÏãúÏä§ÌÖú",
      description: "OpenMRSÏôÄ Orthanc PACS ÏÑúÎ≤ÑÎ•º ÌÜµÌï©Ìïú ÏûÑÏÉÅ ÏùòÏÇ¨Í≤∞Ï†ï ÏßÄÏõê ÏãúÏä§ÌÖú",
      image: coverImage,
      technologies: ["Django", "React", "OpenMRS", "Orthanc"],
      link: "#"
    },
    {
      id: 2,
      title: "Password Generator",
      description: "ÏïàÏ†ÑÌïú Ìå®Ïä§ÏõåÎìúÎ•º ÏÉùÏÑ±ÌïòÎäî Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò",
      image: coverImage,
      technologies: ["React", "JavaScript", "CSS"],
      link: "#"
    },
    {
      id: 3,
      title: "Personal Blog API",
      description: "Í∞úÏù∏ Î∏îÎ°úÍ∑∏Î•º ÏúÑÌïú RESTful API ÏãúÏä§ÌÖú",
      image: coverImage,
      technologies: ["Node.js", "Express", "MongoDB"],
      link: "#"
    }
  ], []);

  const technologies = useMemo(() => [
    { name: "React", icon: "‚öõÔ∏è" },
    { name: "TailwindCSS", icon: "üé®" },
    { name: "Python", icon: "üêç" },
    { name: "Django", icon: "üéØ" },
    { name: "FastAPI", icon: "‚ö°" },
    { name: "PyTorch", icon: "üî•" },
    { name: "TensorFlow", icon: "üß†" },
    { name: "MongoDB", icon: "üçÉ" },
    { name: "MySQL", icon: "üê¨" },
    { name: "Docker", icon: "üê≥" }
  ], []);

  const sections = useMemo(() => ['welcome', 'intro', 'about', 'tech', 'projects', 'contact'], []);

  // ÏÑπÏÖòÎ≥Ñ Ïä§ÌÅ¨Î°§ Ï≤òÎ¶¨
  useEffect(() => {
    const handleWheel = (e) => {
      e.preventDefault();
      
      const now = Date.now();
      const timeDiff = now - lastScrollTime;
      
      if (timeDiff < 100) return;
      
      setLastScrollTime(now);
      
      if (e.deltaY > 0 && currentSection < sections.length - 1) {
        setCurrentSection(prev => prev + 1);
      } else if (e.deltaY < 0 && currentSection > 0) {
        setCurrentSection(prev => prev - 1);
      }
    };

    document.addEventListener('wheel', handleWheel, { passive: false });
    
    return () => {
      document.removeEventListener('wheel', handleWheel);
    };
  }, [currentSection, lastScrollTime, sections.length]);

  // ÌÇ§Î≥¥Îìú ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò
  useEffect(() => {
    const handleKeyDown = (e) => {
      if (e.key === 'ArrowDown' || e.key === 'PageDown') {
        e.preventDefault();
        if (currentSection < sections.length - 1) {
          setCurrentSection(prev => prev + 1);
        }
      } else if (e.key === 'ArrowUp' || e.key === 'PageUp') {
        e.preventDefault();
        if (currentSection > 0) {
          setCurrentSection(prev => prev - 1);
        }
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    
    return () => {
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, [currentSection, sections.length]);

  const nextProject = useCallback(() => {
    setCurrentProjectIndex((prev) => (prev + 1) % projects.length);
  }, [projects.length]);

  const prevProject = useCallback(() => {
    setCurrentProjectIndex((prev) => (prev - 1 + projects.length) % projects.length);
  }, [projects.length]);

  const goToSection = useCallback((index) => {
    console.log('goToSection called:', index);
    if (index >= 0 && index < sections.length) {
      setCurrentSection(index);
    }
  }, [sections.length]);

  // Î¨¥Ìïú Î£®ÌîÑ Ïä§ÌÅ¨Î°§ ÌÖçÏä§Ìä∏ (1, 5Î≤àÏß∏ Ï§Ñ) - ÏõêÎ≥∏ Î∞©Ïãù
  const InfiniteScrollText = React.memo(({ text, direction = "right" }) => {
    const repeatedText = `${text} `.repeat(3); // 3Î≤à Î∞òÎ≥µÏúºÎ°ú ÎÅäÍπÄ Î∞©ÏßÄ
    
    return (
      <>
        <style jsx>{`
          @keyframes scroll-right {
            0% { transform: translateX(0%); }
            100% { transform: translateX(-33.333%); }
          }
          @keyframes scroll-left {
            0% { transform: translateX(-33.333%); }
            100% { transform: translateX(0%); }
          }
          .scroll-right {
            animation: scroll-right 25s linear infinite;
          }
          .scroll-left {
            animation: scroll-left 25s linear infinite;
          }
        `}</style>
        <div className="overflow-hidden whitespace-nowrap w-full h-40 flex items-center">
          <div className={`text-4xl md:text-6xl lg:text-8xl xl:text-9xl font-bold text-white select-none ${direction === 'right' ? 'scroll-right' : 'scroll-left'}`}
               style={{
                 WebkitTextStroke: '2px #3b82f6',
                 textStroke: '2px #3b82f6',
                 letterSpacing: '0.1em',
                 fontFamily: '"Inter", "Helvetica Neue", Arial, sans-serif',
                 textShadow: '0 0 20px rgba(59, 130, 246, 0.3)',
                 lineHeight: '1.2',
                 paddingBottom: '0.2em',
               }}>
            {repeatedText}
          </div>
        </div>
      </>
    );
  });

  // Ï§ëÏïô ÌÖçÏä§Ìä∏ Ïª¥Ìè¨ÎÑåÌä∏ - ÏúÑÏπò Í≥†Ï†ïÏúºÎ°ú ÌÖçÏä§Ìä∏ Ï†êÌîÑ Î∞©ÏßÄ
  const CenterHighlightText = React.memo(({ 
    text, 
    highlightWord, 
    delay = 0, 
    highlightCenterOnly = false,
    direction = "right"
  }) => {
    const words = text.split(' ');
    const centerIndex = Math.floor(words.length / 2);
    const [isHighlighted, setIsHighlighted] = useState(false);
    
    useEffect(() => {
      if (currentSection === 0) {
        // Ïï†ÎãàÎ©îÏù¥ÏÖòÍ≥º ÎèôÏãúÏóê ÌïòÏù¥ÎùºÏù¥Ìä∏ ÏãúÏûë
        const highlightTimer = setTimeout(() => {
          setIsHighlighted(true);
        }, (delay + 2.2) * 1000);

        return () => {
          clearTimeout(highlightTimer);
          setIsHighlighted(false);
        };
      }
    }, [currentSection, delay]);
    
    return (
      <>
        <style jsx>{`
          @keyframes slide-right-fast {
            0% { transform: translateX(0%); }
            100% { transform: translateX(-25%); }
          }
          @keyframes slide-left-fast {
            0% { transform: translateX(0%); }
            100% { transform: translateX(25%); }
          }
          .slide-right-fast {
            animation: slide-right-fast 2s ease-out forwards;
          }
          .slide-left-fast {
            animation: slide-left-fast 2s ease-out forwards;
          }
        `}</style>
        <motion.div 
          className="overflow-hidden whitespace-nowrap w-full h-36 flex items-center justify-center"
          initial={{ opacity: 1 }}
        >
          <motion.div
            className={`flex items-center gap-4 md:gap-6 lg:gap-8 xl:gap-10 ${
              direction === 'right' ? 'slide-right-fast' : 'slide-left-fast'
            }`}
            style={{
              animationDelay: `${delay}s`,
              animationFillMode: 'both',
              transform: direction === 'right' ? 'translateX(-25%)' : 'translateX(25%)', // ÏµúÏ¢Ö ÏúÑÏπòÎ°ú ÎØ∏Î¶¨ ÏÑ§Ï†ï
            }}
          >
            {words.map((word, index) => {
              const shouldHighlight = highlightCenterOnly 
                ? (index === centerIndex && word === highlightWord && isHighlighted)
                : (word === highlightWord && isHighlighted);
                
              return (
                <span
                   key={`${word}-${index}`}
                className="text-4xl md:text-6xl lg:text-8xl xl:text-9xl font-bold select-none"
                style={{
                  color: shouldHighlight ? '#304d88ff' : '#fff',
                  WebkitTextStroke: shouldHighlight ? '0px' : '2px #3b82f6',
                  textStroke: shouldHighlight ? '0px' : '2px #3b82f6',
                  letterSpacing: '0.1em',
                  fontFamily: '"Inter", "Helvetica Neue", Arial, sans-serif',
                  textShadow: shouldHighlight 
                    ? '0 0 20px rgba(59, 130, 246, 0.3)' 
                    : '0 0 20px #rgba(59, 130, 246, 0.3)',
                  lineHeight: '1.2',
                  transition: 'color 1.0s ease, text-shadow 1.5s ease, WebkitTextStroke 1.5s ease, textStroke 1.5s ease'
                }}
              >
                {word}
                </span>
              );
            })}
          </motion.div>
        </motion.div>
      </>
    );
  });

  return (
    <div className="bg-gray-50 overflow-hidden h-screen">
      {/* Fixed Navigation */}
      {currentSection > 0 && (
        <motion.header 
          className="fixed top-0 left-0 right-0 z-50 bg-white/90 backdrop-blur-md shadow-sm border-b border-gray-200"
          initial={{ y: -100 }}
          animate={{ y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <div className="max-w-6xl mx-auto px-4 py-4 flex justify-between items-center">
            <motion.h1 
              className="text-2xl font-bold text-gray-800"
              whileHover={{ scale: 1.05 }}
            >
              ÍπÄÏÉÅÎ¨µ
            </motion.h1>
            <nav className="hidden md:flex space-x-8">
              {sections.slice(1).map((section, index) => (
                <button
                  key={section}
                  onClick={() => goToSection(index + 1)}
                  className={`text-gray-600 hover:text-gray-900 transition-colors capitalize ${
                    currentSection === index + 1 ? 'text-blue-600 font-semibold' : ''
                  }`}
                >
                  {section === 'intro' ? 'Home' : section}
                </button>
              ))}
            </nav>
          </div>
        </motion.header>
      )}

      {/* Section Indicators */}
      <div className="fixed right-8 top-1/2 transform -translate-y-1/2 z-40 space-y-3">
        {sections.map((_, index) => (
          <button
            key={index}
            onClick={() => goToSection(index)}
            className={`block w-3 h-3 rounded-full transition-all ${
              currentSection === index 
                ? 'bg-blue-600 scale-125' 
                : 'bg-gray-300 hover:bg-gray-400'
            }`}
          />
        ))}
      </div>

      {/* Main Container */}
      <div 
        className="h-full"
        style={{
          transform: `translateY(-${currentSection * 100}vh)`,
          transition: 'transform 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94)'
        }}
      >
        {/* Welcome Page - Ï°∞Ï†ïÎêú Ïï†ÎãàÎ©îÏù¥ÏÖò */}
        <section className="h-screen bg-white flex flex-col justify-center relative overflow-hidden">
          
          {/* Ï≤´ Î≤àÏß∏ Ï§Ñ - Î¨¥Ìïú Î£®ÌîÑ Ïä§ÌÅ¨Î°§ (ÌïòÏù¥ÎùºÏù¥Ìä∏ ÏóÜÏùå) */}
          <InfiniteScrollText 
            text="DEVELOPER INME DEVELOPER INME DEVELOPER INME DEVELOPER INME DEVELOPER INME DEVELOPER INME"
            direction="right"
          />
          
          {/* Îëê Î≤àÏß∏ Ï§Ñ - Îπ†Î•∏ Ïï†ÎãàÎ©îÏù¥ÏÖò + ÎèôÏãú ÌïòÏù¥ÎùºÏù¥Ìä∏ */}
          <CenterHighlightText 
            text="DATA_ANALYST FRONT_END BACK_EN FULLSTACK BACK_END FRONT_END DATA_ANALYST DATA_ANALYST FRONT_END BACK_END FULLSTACK BACK_END FRONT_END DATA_ANALYST"
            highlightWord="FULLSTACK"
            delay={0}
            direction="right"
          />
          
          {/* ÏÑ∏ Î≤àÏß∏ Ï§Ñ - Îπ†Î•∏ Ïï†ÎãàÎ©îÏù¥ÏÖò + ÎèôÏãú ÌïòÏù¥ÎùºÏù¥Ìä∏ */}
          <CenterHighlightText 
            text="DATA_ANALYST PROJECT MANAGER DEVELOPER DATA_ANALYST PROJECT MANAGER DATA_ANALYST PROJECT MANAGER DEVELOPER DATA_ANALYST PROJECT MANAGER"
            highlightWord="DEVELOPER"
            delay={0}
            direction="left"
          />
          
          {/* ÎÑ§ Î≤àÏß∏ Ï§Ñ - Îπ†Î•∏ Ïï†ÎãàÎ©îÏù¥ÏÖò + ÎèôÏãú ÌïòÏù¥ÎùºÏù¥Ìä∏ (Ï§ëÏïôÎßå) */}
          <CenterHighlightText 
            text="MEIN DOME INME MEIN INME DOME INME MEIN DOME MEIN INME DOME MEIN INME DOME MEIN INME DOME MEIN DOME INME INME"
            highlightWord="INME"
            delay={0}
            direction="right"
          />
          
          {/* Îã§ÏÑØ Î≤àÏß∏ Ï§Ñ - Î¨¥Ìïú Î£®ÌîÑ Ïä§ÌÅ¨Î°§ (ÌïòÏù¥ÎùºÏù¥Ìä∏ ÏóÜÏùå) */}
          <InfiniteScrollText 
            text="PROJECT_MANAGER AI_FULLSTACK INME PROJECT_MANAGER AI_FULLSTACK INME"
            direction="left"
          />

          {/* Scroll Indicator */}
          <motion.div 
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2 cursor-pointer z-20"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 2, duration: 1 }}
          >
            <motion.div
              animate={{ y: [0, 10, 0] }}
              transition={{ duration: 2, repeat: Infinity, delay: 2 }}
              onClick={() => goToSection(1)}
              className="flex flex-col items-center gap-2"
            >
              <span className="text-sm text-gray-400 font-medium">SCROLL</span>
              <ArrowDown className="w-5 h-5 text-gray-400" />
            </motion.div>
          </motion.div>
        </section>

        {/* Intro Section */}
        <section className="h-screen bg-white flex items-center">
          <div className="max-w-6xl mx-auto px-4 flex flex-col lg:flex-row items-center justify-between w-full">
            <motion.div 
              className="flex-1 text-center lg:text-left mb-12 lg:mb-0 lg:pr-12"
              initial={{ opacity: 0, x: -50 }}
              animate={{ 
                opacity: currentSection === 1 ? 1 : 0, 
                x: currentSection === 1 ? 0 : -50 
              }}
              transition={{ duration: 0.8 }}
            >
              <h2 className="text-5xl md:text-6xl lg:text-7xl font-bold text-gray-900 mb-6 leading-tight">
                ÏïàÎÖïÌïòÏÑ∏Ïöî,<br />
                <span className="text-blue-600">ÍπÄÏÉÅÎ¨µ</span>ÏûÖÎãàÎã§
              </h2>
              
              <p className="text-xl md:text-2xl text-gray-600 mb-4">
                ÌíÄÏä§ÌÉù Í∞úÎ∞úÏûêÎ°úÏÑú ÌôïÏû• Í∞ÄÎä•ÌïòÍ≥† Ìö®Ïú®Ï†ÅÏù∏ ÏãúÏä§ÌÖúÏùÑ Íµ¨Ï∂ïÌï©ÎãàÎã§.
              </p>
              <p className="text-lg text-gray-500 mb-8">
                Seoul, Korea
              </p>
              
              <div className="flex flex-wrap justify-center lg:justify-start gap-4 mb-8">
                <motion.button 
                  className="bg-blue-600 text-white px-8 py-4 rounded-lg hover:bg-blue-700 transition-colors text-lg font-medium"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  Resume
                </motion.button>
                <motion.a 
                  href="https://github.com/INME1" 
                  className="p-4 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Github className="w-6 h-6 text-gray-700" />
                </motion.a>
                <motion.a 
                  href="mailto:suisfan111@gmail.com" 
                  className="p-4 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Mail className="w-6 h-6 text-gray-700" />
                </motion.a>
              </div>
            </motion.div>
            
            <motion.div 
              className="flex-shrink-0"
              initial={{ opacity: 0, x: 50 }}
              animate={{ 
                opacity: currentSection === 1 ? 1 : 0, 
                x: currentSection === 1 ? 0 : 50 
              }}
              transition={{ duration: 0.8, delay: 0.2 }}
              whileHover={{ scale: 1.05 }}
            >
              <div className="w-64 h-64 md:w-80 md:h-80 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 p-1">
                <img 
                  src={profileImage} 
                  alt="Profile" 
                  className="w-full h-full rounded-full object-cover bg-white"
                />
              </div>
            </motion.div>
          </div>
        </section>

        {/* About Section */}
        <section className="h-screen bg-gray-50 flex items-center">
          <div className="max-w-6xl mx-auto px-4 w-full">
            <motion.h3 
              className="text-4xl md:text-5xl font-bold text-gray-900 mb-16 text-center"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 2 ? 1 : 0, 
                y: currentSection === 2 ? 0 : 50 
              }}
              transition={{ duration: 0.8 }}
            >
              ABOUT ME
            </motion.h3>
            <motion.div 
              className="bg-white rounded-xl p-8 md:p-12 shadow-lg max-w-4xl mx-auto"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 2 ? 1 : 0, 
                y: currentSection === 2 ? 0 : 50 
              }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              <p className="text-gray-600 leading-relaxed text-lg md:text-xl">
                Îã§ÏñëÌïú Í∏∞Ïà† Î∂ÑÏïºÏóê ÍπäÏùÄ Í¥ÄÏã¨ÏùÑ Í∞ÄÏßÑ Ïó¥Ï†ïÏ†ÅÏù∏ Í∞úÎ∞úÏûêÏûÖÎãàÎã§. Ïõπ Í∞úÎ∞ú(Î∞±ÏóîÎìú ÏãúÏä§ÌÖú Ï§ëÏã¨), 
                ÌÅ¥ÎùºÏö∞Îìú Ïª¥Ìì®ÌåÖ, Îç∞Ïù¥ÌÑ∞, Í≤åÏûÑ Í∞úÎ∞ú, AI Îì±Ïùò Î∂ÑÏïºÏóêÏÑú Í≤ΩÌóòÏùÑ ÏåìÍ≥† ÏûàÏäµÎãàÎã§. 
                ÎòêÌïú ÎπÑÏ¶àÎãàÏä§ Ï∞ΩÏóÖÍ≥º Í∏∞Ïà† ÌòÅÏã†Ïùò ÍµêÏ∞®Ï†êÏóêÎèÑ ÍπäÏùÄ Ìù•ÎØ∏Î•º Í∞ÄÏßÄÍ≥† ÏûàÏäµÎãàÎã§. 
                1ÎÖÑ Ïù¥ÏÉÅÏùò Í≤ΩÌóòÏùÑ ÌÜµÌï¥ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏Î•º ÌÜµÌï¥ Ïã§Î†•ÏùÑ Í∞àÍ≥†Îã¶ÏïòÏúºÎ©∞, 
                ÏßÄÏÜçÏ†ÅÏúºÎ°ú ÏÉàÎ°úÏö¥ Í∏∞Ïà†ÏùÑ ÌïôÏäµÌïòÍ≥† ÌÉêÍµ¨ÌïòÏó¨ Ï†ÑÎ¨∏ÏÑ±ÏùÑ ÌôïÏû•Ìï¥ÎÇòÍ∞ÄÍ≥† ÏûàÏäµÎãàÎã§.
              </p>
            </motion.div>
          </div>
        </section>

        {/* Technologies Section */}
        <section className="h-screen bg-white flex items-center">
          <div className="max-w-6xl mx-auto px-4 w-full">
            <motion.h3 
              className="text-4xl md:text-5xl font-bold text-gray-900 mb-16 text-center"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 3 ? 1 : 0, 
                y: currentSection === 3 ? 0 : 50 
              }}
              transition={{ duration: 0.8 }}
            >
              TECHNOLOGIES
            </motion.h3>
            <motion.div 
              className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-6"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 3 ? 1 : 0, 
                y: currentSection === 3 ? 0 : 50 
              }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              {technologies.map((tech, index) => (
                <motion.div 
                  key={index} 
                  className="flex flex-col items-center p-6 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors cursor-pointer"
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ 
                    opacity: currentSection === 3 ? 1 : 0, 
                    scale: currentSection === 3 ? 1 : 0.8 
                  }}
                  transition={{ duration: 0.5, delay: currentSection === 3 ? index * 0.05 : 0 }}
                  whileHover={{ scale: 1.05 }}
                >
                  <div className="text-4xl mb-3">{tech.icon}</div>
                  <span className="text-gray-700 font-medium text-center">{tech.name}</span>
                </motion.div>
              ))}
            </motion.div>
          </div>
        </section>

        {/* Projects Section */}
        <section className="h-screen bg-gray-50 flex items-center">
          <div className="max-w-6xl mx-auto px-4 w-full">
            <motion.h3 
              className="text-4xl md:text-5xl font-bold text-gray-900 mb-16 text-center"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 4 ? 1 : 0, 
                y: currentSection === 4 ? 0 : 50 
              }}
              transition={{ duration: 0.8 }}
            >
              RECENT PROJECTS
            </motion.h3>
            
            <motion.div 
              className="relative"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 4 ? 1 : 0, 
                y: currentSection === 4 ? 0 : 50 
              }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              <div className="flex items-center justify-center">
                <button 
                  onClick={prevProject}
                  className="absolute left-0 z-10 p-3 bg-white rounded-full shadow-lg hover:shadow-xl transition-shadow"
                >
                  <ChevronLeft className="w-6 h-6 text-gray-600" />
                </button>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl">
                  {projects.slice(currentProjectIndex, currentProjectIndex + 2).map((project) => (
                    <motion.div 
                      key={project.id} 
                      className="bg-white rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow"
                      whileHover={{ y: -5 }}
                    >
                      <img 
                        src={project.image} 
                        alt={project.title}
                        className="w-full h-48 object-cover bg-gray-200"
                      />
                      <div className="p-6">
                        <h4 className="text-xl font-bold text-gray-900 mb-3">{project.title}</h4>
                        <p className="text-gray-600 mb-4">{project.description}</p>
                        <div className="flex flex-wrap gap-2 mb-4">
                          {project.technologies.map((tech, techIndex) => (
                            <span 
                              key={techIndex}
                              className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-medium"
                            >
                              {tech}
                            </span>
                          ))}
                        </div>
                        <a 
                          href={project.link}
                          className="inline-flex items-center text-blue-600 hover:text-blue-700 font-medium"
                        >
                          View Project <ExternalLink className="w-4 h-4 ml-1" />
                        </a>
                      </div>
                    </motion.div>
                  ))}
                </div>

                <button 
                  onClick={nextProject}
                  className="absolute right-0 z-10 p-3 bg-white rounded-full shadow-lg hover:shadow-xl transition-shadow"
                >
                  <ChevronRight className="w-6 h-6 text-gray-600" />
                </button>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Contact Section */}
        <section className="h-screen bg-gray-50 flex items-center">
          <div className="max-w-6xl mx-auto px-4 w-full">
            <motion.h3 
              className="text-4xl md:text-5xl font-bold text-gray-900 mb-16 text-center"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 5 ? 1 : 0, 
                y: currentSection === 5 ? 0 : 50 
              }}
              transition={{ duration: 0.8 }}
            >
              CONTACT ME
            </motion.h3>
            <motion.div 
              className="bg-white rounded-xl p-8 md:p-12 shadow-lg max-w-2xl mx-auto text-center"
              initial={{ opacity: 0, y: 50 }}
              animate={{ 
                opacity: currentSection === 5 ? 1 : 0, 
                y: currentSection === 5 ? 0 : 50 
              }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              <p className="text-gray-600 leading-relaxed text-lg md:text-xl mb-8">
                ÏßàÎ¨∏, Ï†úÏïà ÎòêÎäî ÌòëÏóÖÏóê ÎåÄÌï¥ Î¨∏ÏùòÏÇ¨Ìï≠Ïù¥ ÏûàÏúºÏãúÎ©¥ Ïñ∏Ï†úÎì†ÏßÄ Ïó∞ÎùΩÌï¥ Ï£ºÏÑ∏Ïöî.
              </p>
              
              <div className="flex justify-center gap-6">
                <motion.a 
                  href="https://github.com/INME1" 
                  className="flex items-center gap-3 px-6 py-3 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Github className="w-6 h-6 text-gray-700" />
                  <span className="font-medium">GitHub</span>
                </motion.a>
                <motion.a 
                  href="mailto:suisfan111@gmail.com" 
                  className="flex items-center gap-3 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Mail className="w-6 h-6" />
                  <span className="font-medium">Email</span>
                </motion.a>
              </div>
            </motion.div>
          </div>
        </section>
      </div>
    </div>
  );
};

export default Portfolio;